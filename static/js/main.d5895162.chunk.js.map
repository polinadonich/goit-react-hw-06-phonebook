{"version":3,"sources":["components/Phonebook.module.css","components/ContactElement/ContactElement.module.css","components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","components/ContactElement/ContactElement.js","redux/actions.js","redux/selectors.js","components/ContactList/ContactList.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","App.js","redux/reducer.js","redux/store.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","ContactElement","id","name","number","deleteContact","className","s","button","type","onClick","prototype","PropTypes","string","isRequired","func","checkPropTypes","addContact","createAction","payload","uuidv4","changeFilter","getContacts","state","contacts","items","getFilter","filter","getVisibleContacts","normalizedFilter","toLocaleLowerCase","contact","includes","ContactList","useSelector","dispatch","useDispatch","actions","list","map","item","ContactForm","useState","setName","setNumber","handleChange","e","currentTarget","value","onSubmit","preventDefault","find","alert","lableContact","inputContact","onChange","pattern","title","required","arrayOf","shape","Filter","findLable","App","container","phonebookContainer","contactsContainer","createReducer","initialState","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","contactsPersistConfig","key","storage","blacklist","store","configureStore","reducer","persistReducer","devTools","process","persistor","persistStore","ReactDOM","render","loading","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d5895162.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Phonebook_container__3W1Ja\",\"phonebookContainer\":\"Phonebook_phonebookContainer__3Rs8S\",\"contactsContainer\":\"Phonebook_contactsContainer__3h2fO\",\"list\":\"Phonebook_list__pO5Uz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"number\":\"ContactElement_number__3wOLN\",\"button\":\"ContactElement_button__qsxzB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactList_item__OhIMJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"findLable\":\"Filter_findLable__1Xq0G\",\"find\":\"Filter_find__1Jcru\"};","import s from \"./ContactElement.module.css\";\nimport PropTypes from \"prop-types\";\n\nfunction ContactElement({ id, name, number, deleteContact }) {\n  return (\n    <p>\n      <span>{name}:</span>\n      <span className={s.number}>{number}</span>\n      <button\n        className={s.button}\n        type=\"button\"\n        onClick={() => deleteContact(id)}\n      >\n        Delete\n      </button>\n    </p>\n  );\n}\n\nContactElement.prototype = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.number.isRequired,\n  deleteContact: PropTypes.func.isRequired,\n};\n\nPropTypes.checkPropTypes(ContactElement);\n\nexport default ContactElement;\n","/* eslint-disable import/no-anonymous-default-export */\nimport { createAction } from \"@reduxjs/toolkit\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nconst addContact = createAction(\"contact/add\", (name, number) => ({\n  payload: {\n    id: uuidv4(),\n    name,\n    number,\n  },\n}));\n\nconst deleteContact = createAction(\"contact/delete\");\n\nconst changeFilter = createAction(\"contact/changeFilter\");\n\nexport default { addContact, deleteContact, changeFilter };\n","export const getContacts = (state) => state.contacts.items;\nexport const getFilter = (state) => state.contacts.filter;\n\nexport const getVisibleContacts = (state) => {\n  const contacts = getContacts(state);\n  const filter = getFilter(state);\n  const normalizedFilter = filter.toLocaleLowerCase();\n\n  return contacts.filter((contact) =>\n    contact.name.toLocaleLowerCase().includes(normalizedFilter)\n  );\n};\n","import { useSelector, useDispatch } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport ContactElement from \"../ContactElement\";\nimport s from \"./ContactList.module.css\";\nimport actions from \"../../redux/actions\";\nimport { getVisibleContacts } from \"../../redux/selectors\";\n\nfunction ContactList() {\n  const contacts = useSelector(getVisibleContacts);\n  const dispatch = useDispatch();\n  const deleteContact = (id) => dispatch(actions.deleteContact(id));\n\n  return (\n    <ul className={s.list}>\n      {contacts.map(({ id, name, number }) => (\n        <li key={id} className={s.item}>\n          <ContactElement\n            id={id}\n            name={name}\n            number={number}\n            deleteContact={deleteContact}\n          />\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nexport default ContactList;\n\nContactList.prototype = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.number.isRequired,\n\n  deleteContact: PropTypes.func.isRequired,\n};\n\nPropTypes.checkPropTypes(ContactList);\n","import { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport s from \"./ContactForm.module.css\";\nimport PropTypes from \"prop-types\";\nimport actions from \"../../redux/actions\";\nimport { getContacts } from \"../../redux/selectors\";\n\nfunction ContactForm() {\n  const contacts = useSelector(getContacts);\n  const dispatch = useDispatch();\n  const addContact = (name, number) =>\n    dispatch(actions.addContact(name, number));\n\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n\n  const handleChange = (e) => {\n    if (e.currentTarget.name === \"name\") {\n      setName(e.currentTarget.value);\n    }\n\n    if (e.currentTarget.name === \"number\") {\n      setNumber(e.currentTarget.value);\n    }\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    const isContactsIncludes = contacts.find(\n      (contact) => contact.name === name\n    );\n\n    if (isContactsIncludes) {\n      return alert(`${name} is alredy in contacts`);\n    } else {\n      addContact(name, number);\n      setName(\"\");\n      setNumber(\"\");\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <label className={s.lableContact}>\n        Name\n        <input\n          className={s.inputContact}\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handleChange}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n        />\n      </label>\n\n      <label className={s.lableContact}>\n        Number\n        <input\n          className={s.inputContact}\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          onChange={handleChange}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n        />\n      </label>\n\n      <button className={s.button} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n}\n\nexport default ContactForm;\n\nContactForm.prototype = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.number.isRequired,\n    }).isRequired\n  ),\n  addContact: PropTypes.func.isRequired,\n};\n","// import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport s from \"./Filter.module.css\";\nimport actions from \"../../redux/actions\";\nimport { getFilter } from \"../../redux/selectors\";\n\nfunction Filter() {\n  const value = useSelector(getFilter);\n  const dispatch = useDispatch();\n  const onChange = (e) => dispatch(actions.changeFilter(e.currentTarget.value));\n\n  return (\n    <label className={s.findLable}>\n      Find contacts by name\n      <input\n        className={s.find}\n        type=\"text\"\n        value={value}\n        onChange={onChange}\n      ></input>\n    </label>\n  );\n}\n\nexport default Filter;\n\nFilter.prototype = {\n  filter: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nPropTypes.checkPropTypes(Filter);\n","import ContactList from \"./components/ContactList\";\nimport ContactForm from \"./components/ContactForm\";\nimport Filter from \"./components/Filter\";\nimport s from \"./components/Phonebook.module.css\";\n\nfunction App() {\n  return (\n    <div className={s.container}>\n      <div className={s.phonebookContainer}>\n        <h1>Phonebook</h1>\n        <ContactForm />\n      </div>\n\n      <div className={s.contactsContainer}>\n        <h2>Contacts</h2>\n        <Filter />\n        <ContactList />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { createReducer } from \"@reduxjs/toolkit\";\nimport { combineReducers } from \"redux\";\nimport actions from \"./actions\";\n\nconst items = createReducer([], {\n  [actions.addContact]: (state, { payload }) => [...state, payload],\n  [actions.deleteContact]: (state, { payload }) =>\n    state.filter((contact) => contact.id !== payload),\n});\n\nconst filter = createReducer(\"\", {\n  [actions.changeFilter]: (state, { payload }) => payload,\n});\n\nconst initialState = combineReducers({\n  items,\n  filter,\n});\n\nexport default initialState;\n","/* eslint-disable import/no-anonymous-default-export */\n// import { createStore, combineReducers } from \"redux\";\nimport { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nimport logger from \"redux-logger\";\nimport contacts from \"./reducer\";\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\nconst contactsPersistConfig = {\n  key: \"contacts\",\n  storage,\n  blacklist: [\"filter\"],\n};\n\nconst store = configureStore({\n  reducer: {\n    contacts: persistReducer(contactsPersistConfig, contacts),\n  },\n  middleware,\n\n  devTools: process.env.NODE_ENV === \"development\",\n});\n\nconst persistor = persistStore(store);\n\nexport default { store, persistor };\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <Provider store={store.store}>\n    <PersistGate loading={null} persistor={store.persistor}>\n      <React.StrictMode>\n        <App />\n      </React.StrictMode>\n    </PersistGate>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"lableContact\":\"ContactForm_lableContact__2ZqK5\",\"inputContact\":\"ContactForm_inputContact__3xKpM\",\"button\":\"ContactForm_button__o7Nmq\"};"],"sourceRoot":""}